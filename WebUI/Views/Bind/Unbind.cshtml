<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <title>Менеджер участков</title>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.0/css/bootstrap.min.css" rel="stylesheet" />
</head>
<body>
    <h2>Отвязка от участка</h2>
    <form name="unbindForm">
        <input type="hidden" name="id" value="0" />
        <div class="form-group col-md-5">
            <label for="area">Область:</label>
            <select class="form-control" name="area" id="1">
                <option value="none" selected disabled hidden>Выбрать область</option>
            </select>
            <label for="district">Район:</label>
            <select class="form-control" name="district" id="2">
                <option value="none" selected disabled hidden>Выбрать район</option>
            </select>
            <label for="spot">Участок:</label>
            <select required class="form-control" name="spot" id="3">
                <option value="none" selected disabled hidden>Выбрать участок</option>
            </select>
            <label for="city">Город:</label>
            <select class="form-control" name="city" id="4" multiple>
                <option value="none" selected disabled hidden>Выбрать город</option>
            </select>
            <label for="house">Дом:</label>
            <select class="form-control" name="house" id="5" multiple>
                <option value="none" selected disabled hidden>Выбрать дом</option>
            </select>
        </div>
        <div class="panel-body">
            <button type="submit" id="submit_city" class="btn btn-primary">Отвязать города</button>
            <button type="submit" id="submit_house" class="btn btn-primary">Отвязать дома</button>
        </div>
    </form>

    <script>
        // Получение всех областей
        async function GetAreas() {
            // отправляет запрос и получаем ответ
            const response = await fetch("/api/area", {
                method: "GET",
                headers: { "Accept": "application/json" }
            });
            // если запрос прошел нормально
            if (response.ok === true) {
                // получаем данные
                const areas = await response.json();
                var selectArea = document.getElementById("1");

                areas.forEach(area => {
                    var option = document.createElement("option");
                    option.text = area.areaName;
                    option.value = area.id;
                    selectArea.add(option);
                });
            }
        }

        // Получение районов области
        async function GetDistrictByAreaId(id) {
            const response = await fetch("/api/district/AreaId/" + id, {
                method: "GET",
                headers: { "Accept": "application/json" }
            });
            if (response.ok === true) {
                const districts = await response.json();
                var selectDistrict = document.getElementById("2");

                districts.forEach(district => {
                    var option = document.createElement("option");
                    option.text = district.districtName;
                    option.value = district.id;
                    selectDistrict.add(option);
                });
            }
        }

        async function GetSpotsByDistrictId(id) {
            const response = await fetch("/api/spot/DistrictId/" + id, {
                method: "GET",
                headers: { "Accept": "application/json" }
            });
            if (response.ok === true) {
                const spots = await response.json();
                var selectSpot = document.getElementById("3");

                spots.forEach(spot => {
                    var option = document.createElement("option");
                    option.text = spot.spotName;
                    option.value = spot.id;
                    selectSpot.add(option);
                });
            }
        }

        // Получение городов по участку
        async function GetCitiesBySpotId(id) {
            const response = await fetch("/api/city/SpotId/" + id, {
                method: "GET",
                headers: { "Accept": "application/json" }
            });
            if (response.ok === true) {
                const cities = await response.json();
                var selectCity = document.getElementById("4");

                cities.forEach(city => {
                    var option = document.createElement("option");
                    option.text = city.cityType + " " + city.cityName + " (" + city.cityCategory + ")";
                    option.value = city.id;
                    selectCity.add(option);
                });
            }
        }

        async function GetHousesBySpotId(id) {
            const response = await fetch("/api/house/SpotId/" + id, {
                method: "GET",
                headers: { "Accept": "application/json" }
            });
            if (response.ok === true) {
                const houses = await response.json();
                var selectHouse = document.getElementById("5");

                houses.forEach(house => {
                    var option = document.createElement("option");
                    option.text = house.houseNumber;
                    option.value = house.id;
                    selectHouse.add(option);
                });
            }
        }

        async function UnbindCity(cities_id, spot_id) {
            const response = await fetch("/api/city/unbind", {
                method: "PUT",
                headers: { "Accept": "application/json", "Content-Type": "application/json" },
                body: JSON.stringify({
                    ids: cities_id
                })
            });
            if (response.ok === true) {
                alert("Города успешно отвязаны!");
                clearSelect(document.getElementById("4"));
                GetCitiesBySpotId(spot_id);
            }
            else {
                alert(response.status);
            }
        }

        async function UnbindHouse(house_id, spot_id) {
            const response = await fetch("/api/house/unbind", {
                method: "PUT",
                headers: { "Accept": "application/json", "Content-Type": "application/json" },
                body: JSON.stringify({
                    ids: house_id
                })
            });
            if (response.ok === true) {
                alert("Дома успешно отвязаны!");
                clearSelect(document.getElementById("5"));
                GetHousesBySpotId(spot_id);
            }
            else {
                alert(response.status);
            }
        }

        // сброс формы
        function reset() {
            const form = document.forms["unbindForm"];
            form.reset();
            form.elements["id"].value = 0;
        }

        // отправка
        document.getElementById("submit_city").addEventListener('click', e => {
            e.preventDefault();

            const form = document.forms["unbindForm"];

            var selected = [];
            for (var option of form.elements["city"].options) {
                if (option.selected) {
                    selected.push(option.value);
                }
            }
            const spot_id = form.elements["spot"].value;

            UnbindCity(selected, spot_id);
        });

        // отправка
        document.getElementById("submit_house").addEventListener('click', e => {
            e.preventDefault();

            const form = document.forms["unbindForm"];

            var selected = [];
            for (var option of form.elements["house"].options) {
                if (option.selected) {
                    selected.push(option.value);
                }
            }
            const spot_id = form.elements["spot"].value;

            UnbindHouse(selected, spot_id);
        });


        function clearSelect(selectElement) {
            var i, L = selectElement.options.length - 1;
            for (i = L; i >= 0; i--) {
                if (selectElement.value == "none") continue;
                selectElement.remove(i);
            }
        }
        // загрузка областей
        GetAreas();

        // обновление районов после выбора области
        document.getElementById("1").addEventListener('change', (event) => {
            clearSelect(document.getElementById("2"));
            GetDistrictByAreaId(event.target.value);
        })

        // обновление участков
        document.getElementById("2").addEventListener('change', (event) => {
            clearSelect(document.getElementById("3"));
            GetSpotsByDistrictId(event.target.value);
        })

        // обновление городов и домов
        document.getElementById("3").addEventListener('change', (event) => {
            clearSelect(document.getElementById("4"));
            clearSelect(document.getElementById("5"));
            GetCitiesBySpotId(event.target.value);
            GetHousesBySpotId(event.target.value);
        })
    </script>
</body>
</html>